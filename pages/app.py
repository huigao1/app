# -*- coding: utf-8 -*-
"""Copy of app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pxdFf5wQneacBWjdpR4dOHIEYP6qUise
"""

# üì¶ Import libraries
import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np
import joblib
import matplotlib.pyplot as plt

# üì• Load model
ebitda_model = joblib.load('ebitda_margin_model.pkl')

# üè∑Ô∏è App Title
st.title("üìà ESG Risk What-If Analysis on EBITDA Margin")

# üîé User Input
ticker = st.text_input("Enter a stock ticker (example: AAPL, TSLA):").strip().upper()

if ticker:
    try:
        # Fetch stock data
        stock = yf.Ticker(ticker)

        # --- ESG Scores ---
        sustainability = stock.sustainability
        if sustainability is not None and not sustainability.empty:
            environment_risk = sustainability.loc["environmentScore"].iloc[0]
            social_risk = sustainability.loc["socialScore"].iloc[0]
            governance_risk = sustainability.loc["governanceScore"].iloc[0]

            # Normalize initially
            env_score = 1 - (environment_risk / 100)
            soc_score = 1 - (social_risk / 100)
            gov_score = 1 - (governance_risk / 100)

            st.success(f"‚úÖ ESG Risk Scores Fetched and Normalized:")
            st.write(f"Environmental Risk: {environment_risk:.2f}, Social Risk: {social_risk:.2f}, Governance Risk: {governance_risk:.2f}")
        else:
            st.error("‚ùå No ESG data available. Please enter manually.")
            st.stop()

        # --- Financials and Balance Sheet ---
        balance_sheet = stock.balance_sheet
        financials = stock.financials
        cashflow = stock.cashflow

        total_assets = balance_sheet.loc["Total Assets"].iloc[0]

        if "Total Liabilities Net Minority Interest" in balance_sheet.index:
            total_liabilities = balance_sheet.loc["Total Liabilities Net Minority Interest"].iloc[0]
        else:
            st.error("‚ùå Total Liabilities Net Minority Interest not found.")
            st.stop()

        revenue = financials.loc["Total Revenue"].iloc[0]
        net_income = financials.loc["Net Income"].iloc[0]
        cash_from_operations = cashflow.loc["Operating Cash Flow"].iloc[0]

        # --- Calculate Ratios ---
        debt_ratio = total_liabilities / total_assets
        asset_turnover = revenue / total_assets
        log_assets = np.log10(total_assets)
        roa = net_income / total_assets
        net_profit_margin = net_income / revenue
        cashflow_margin = cash_from_operations / revenue

        st.success("‚úÖ Financial Ratios Calculated Successfully!")

    except Exception as e:
        st.error(f"‚ùå Error fetching data: {e}")
        st.stop()

    # --- What-If Analysis ---

    st.subheader("üîé What-If Analysis: Increasing ESG Risk")

    risk_increases = [0.00, 0.20, 0.40, 0.60, 0.80, 1.00]  # 0% to +100%
    results = []

    for inc in risk_increases:
        # Increase risk scores
        new_environment_risk = min(environment_risk * (1 + inc), 100)
        new_social_risk = min(social_risk * (1 + inc), 100)
        new_governance_risk = min(governance_risk * (1 + inc), 100)

        # Re-normalize
        new_env_score = 1 - (new_environment_risk / 100)
        new_soc_score = 1 - (new_social_risk / 100)
        new_gov_score = 1 - (new_governance_risk / 100)

        input_data = pd.DataFrame([{
            "Asset_Turnover":             asset_turnover,
            "Debt_Ratio":                 debt_ratio,
            "Log_Assets":                 log_assets,
            "ROA":                        roa,
            "Net_Profit_Margin":           net_profit_margin,
            "CashFlow_Margin":             cashflow_margin,
            "ESG_Environmental_Score":    new_env_score,
            "ESG_Social_Score":            new_soc_score,
            "ESG_Governance_Score":        new_gov_score
        }])

        ebitda_pred = ebitda_model.predict(input_data)[0]

        results.append({
            "Risk Increase (%)": int(inc * 100),
            "New Environmental Risk": round(new_environment_risk, 2),
            "New Social Risk": round(new_social_risk, 2),
            "New Governance Risk": round(new_governance_risk, 2),
            "Predicted EBITDA Margin": round(ebitda_pred, 4)
        })

    # --- Show Results ---
    results_df = pd.DataFrame(results)
    st.dataframe(results_df)

    # --- Plot ---
    st.subheader("üìä EBITDA Margin vs ESG Risk Increase")
    fig, ax = plt.subplots()
    ax.plot(results_df["Risk Increase (%)"], results_df["Predicted EBITDA Margin"], marker='o')
    ax.set_xlabel("Increase in ESG Risk (%)")
    ax.set_ylabel("Predicted EBITDA Margin")
    ax.set_title(f"Impact of Increasing ESG Risk on EBITDA Margin ({ticker})")
    ax.grid(True)
    st.pyplot(fig)

    st.success("üßπ Analysis Complete!")
